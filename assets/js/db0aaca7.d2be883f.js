(self.webpackChunksoftware_engineering_reference=self.webpackChunksoftware_engineering_reference||[]).push([[161],{44304:function(e,t,a){"use strict";a.d(t,{n:function(){return i}});var n=a(67294),r=a(86010),s="container_1Pru";function i(e){var t=e.colorClassNames,a=Object.entries(t).map((function(e,t){var a=e[0],s=e[1];return n.createElement("li",{className:(0,r.Z)(a),key:t},s)}));return n.createElement("div",{className:(0,r.Z)(s,"padding--md","padding-top--lg","padding-right--lg")},n.createElement("ul",null,a))}},18652:function(e,t,a){"use strict";a.d(t,{pv:function(){return l},pb:function(){return m},Oo:function(){return o}});var n=a(67294),r=a(86010),s="container_8l-3",i="controlsContainer_2iCX";function m(e){var t=e.children;return n.createElement("div",{className:(0,r.Z)("card__body")},t)}function o(e){var t=e.children;return n.createElement("div",{className:(0,r.Z)("card__footer",i)},n.createElement("hr",null),t)}function l(e){var t=e.children,a=e.title;return n.createElement("div",{className:(0,r.Z)(s,"margin--md","card")},n.createElement("div",{className:(0,r.Z)("card__header")},n.createElement("h3",null,a),n.createElement("hr",null)),t)}},54433:function(e,t,a){"use strict";function n(e){return function(t){var a=e[t];if(null==a){var n=Object.keys(e).join(", ");throw Error("could not find class of name '"+t+"' among: "+n)}return a}}a.d(t,{q:function(){return n}})},31807:function(e,t,a){"use strict";a.r(t),a.d(t,{contentTitle:function(){return y},default:function(){return C},frontMatter:function(){return v},metadata:function(){return x},toc:function(){return E}});var n=a(87462),r=a(63366),s=a(67294),i=a(3905),m=a(55196),o=a(45697),l=a.n(o),p=a(86010),c=a(55835),h=a(44304),u=a(18652),d=(0,a(54433).q)({hashDigest:"hashDigest_34-K",colliding:"colliding_3MJw",nonColliding:"nonColliding_3SZA"}),g={md5:"MD5",sha1:"SHA-1",sha256:"SHA-256",sha512:"SHA-512"};function k(e){for(var t,a=e.algorithm,n=e.inputString,r=[],s=(0,m.Z)(c.createHash(a).update(n).digest());!(t=s()).done;){var i=t.value;r.push(i)}return r.flatMap((function(e){return[" "].concat(Array.from(e.toString(2).padStart(8,0)),[" "])}))}function N(e){var t=e.bitChars,a=e.otherBitChars,n=t.map((function(e,t){var n=e===a[t]?d("colliding"):d("nonColliding");return s.createElement("span",{key:t,className:(0,p.Z)(n)},e)}));return s.createElement("p",null,s.createElement("strong",{className:d("hashDigest")},n))}function f(e){var t,a=e.algorithm,n=e.input1,r=e.input2,i=k({algorithm:a,inputString:n}),m=k({algorithm:a,inputString:r}),o=s.createElement(N,{bitChars:i,otherBitChars:m}),l=s.createElement(N,{bitChars:m,otherBitChars:i}),c=((t={})[d("colliding")]="colliding bits",t[d("nonColliding")]="non-colliding bits",t);return s.createElement("div",{className:(0,p.Z)("container","padding--md")},s.createElement("div",{className:(0,p.Z)("row")},s.createElement("div",{className:(0,p.Z)("col","col--9")},s.createElement("p",null,"Hash digest 1:"),o,s.createElement("p",null,"Hash digest 2:"),l),s.createElement("div",{className:(0,p.Z)("col","col--3")},s.createElement(h.n,{colorClassNames:c}))))}function w(){var e=s.useState(Object.keys(g)[0]),t=e[0],a=e[1],n=s.useState("example text 1"),r=n[0],i=n[1],m=s.useState("example text 2"),o=m[0],l=m[1],c=Object.entries(g).map((function(e,n){var r=e[0],i=e[1],m=r===t;return s.createElement("li",{className:(0,p.Z)("tabs__item",{"tabs__item--active":m}),key:n,onClick:function(){return a(r)}},i)}));return s.createElement(u.pv,{title:"Hash Collisions"},s.createElement(u.pb,null,s.createElement("ul",{className:(0,p.Z)("tabs","tabs--block")},c),s.createElement(f,{algorithm:t,input1:r,input2:o})),s.createElement(u.Oo,null,s.createElement("div",{className:(0,p.Z)("container")},s.createElement("div",{className:(0,p.Z)("row")},s.createElement("div",{className:(0,p.Z)("col","col--12")},s.createElement("input",{onChange:function(e){return i(e.target.value)},placeholder:"input 1",type:"text",value:r}))),s.createElement("div",{className:(0,p.Z)("row")},s.createElement("div",{className:(0,p.Z)("col","col--12")},s.createElement("input",{onChange:function(e){return l(e.target.value)},placeholder:"input 2",type:"text",value:o}))))))}N.propTypes={bitChars:l().arrayOf(l().string).isRequired,otherBitChars:l().arrayOf(l().string).isRequired},f.propTypes={algorithm:l().string.isRequired,input1:l().string.isRequired,input2:l().string.isRequired};var b=["components"],v={title:"Cryptographical Hashing",sidebar_position:2},y=void 0,x={unversionedId:"digital-security/hashing/cryptography",id:"digital-security/hashing/cryptography",isDocsHomePage:!1,title:"Cryptographical Hashing",description:"Properties",source:"@site/docs/digital-security/hashing/cryptography.mdx",sourceDirName:"digital-security/hashing",slug:"/digital-security/hashing/cryptography",permalink:"/software-engineering-reference/digital-security/hashing/cryptography",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Cryptographical Hashing",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Hashing Overview",permalink:"/software-engineering-reference/digital-security/hashing/overview"},next:{title:"Symmetric Encryption",permalink:"/software-engineering-reference/digital-security/encryption/symmetric"}},E=[{value:"Properties",id:"properties",children:[{value:"Pre-image resistance",id:"pre-image-resistance",children:[]},{value:"Second pre-image resistance",id:"second-pre-image-resistance",children:[]},{value:"Collision resistance",id:"collision-resistance",children:[]}]},{value:"Examples of algorithms",id:"examples-of-algorithms",children:[]},{value:"Passwords hashing",id:"passwords-hashing",children:[{value:"Rainbow tables",id:"rainbow-tables",children:[]},{value:"Password salting",id:"password-salting",children:[]}]},{value:"Sandbox",id:"sandbox",children:[]}],M={toc:E};function C(e){var t=e.components,a=(0,r.Z)(e,b);return(0,i.kt)("wrapper",(0,n.Z)({},M,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("p",null,"Cryptoraphical hash functions, in addition to core features of\n",(0,i.kt)("a",{parentName:"p",href:"overview"},"general hash functions")),(0,i.kt)("h3",{id:"pre-image-resistance"},"Pre-image resistance"),(0,i.kt)("p",null,"Given hash digest ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"h")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"h")))))," it should be difficult to find a message\n",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"m")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m")))))," that that ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"h"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"hash"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"m"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"h = \\operatorname{hash}(m)")))))),(0,i.kt)("h3",{id:"second-pre-image-resistance"},"Second pre-image resistance"),(0,i.kt)("p",null,"Given a message ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"1"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m_1")))))," it should be difficult to find a different message\n",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"2"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m_2")))))," such that ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"hash"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"1")),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"hash"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"2")),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\operatorname{hash}(m_1) = \\operatorname{hash}(m_2)")))))),(0,i.kt)("h3",{id:"collision-resistance"},"Collision resistance"),(0,i.kt)("p",null,"It should be difficult to find pairs of ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"1"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m_1")))))," and ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"2"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m_2")))))," that\n",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"hash"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"1")),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"hash"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"m"),(0,i.kt)("mn",{parentName:"msub"},"2")),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\operatorname{hash}(m_1) = \\operatorname{hash}(m_2)")))))),(0,i.kt)("h2",{id:"examples-of-algorithms"},"Examples of algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MD5"),(0,i.kt)("li",{parentName:"ul"},"SHA-1"),(0,i.kt)("li",{parentName:"ul"},"SHA-2 (SHA-256, SHA-512)"),(0,i.kt)("li",{parentName:"ul"},"SHA-3"),(0,i.kt)("li",{parentName:"ul"},"Whirpool")),(0,i.kt)("h2",{id:"passwords-hashing"},"Passwords hashing"),(0,i.kt)("p",null,"To protect users passwords from being exposed, it is desirable to store\nonly their digests. The ",(0,i.kt)("a",{parentName:"p",href:"#pre-image-resistance"},"pre-image resistance")," makes it infeasible to\nrestore their original values based on them. Despite the fact of\nnot possesing the original password, the autentication is still possible\nby asking the user to provide their password, applying the same hash\nfunction to it, and comparing the result against the stored digest.\nThe ",(0,i.kt)("a",{parentName:"p",href:"#collision-resistance"},"collision resistance")," gives a reasurance that if digest\nmatch it is virtually certain that the user presented the original\npassword. Theoretically though, such an authentication process would be\nsuccessful for any password value resulting in the stored hash digest."),(0,i.kt)("h3",{id:"rainbow-tables"},"Rainbow tables"),(0,i.kt)("p",null,"Based on the fact that all cryptographic hash functions are\ndeterministic, it is possible to pre-compute results for a subset of\ninputs. For the brute-force type of attacks, usually the most probable\ninputs are subject of that computation, such as words from encyclopedic\ndictionaries or short sequences of characters. The existance of such\ndatbases, as well known as ",(0,i.kt)("em",{parentName:"p"},"rainbow tables")," makes short passwords almost\ninstantly identifiable for popular hashing algorithms, regardles of\ntheir strength."),(0,i.kt)("h3",{id:"password-salting"},"Password salting"),(0,i.kt)("p",null,"One of techniques which prevents from reusing pre-computed hash digests\nis a technique called ",(0,i.kt)("em",{parentName:"p"},"password salting"),". It requires storing a large,\nrandom serie of characters, a salt, along the hash digest. During the\ninitial hash digest generation, the salt is appender or prepended to\nthe original password before passing it to the hashing function.\nExactly the same process is followed during the password verification.\nEven though the salt is non-secret, and therefore does not significantly\nimpede guessing the password or finding a collision, it prevents, to a\nlarge extend, from re-using previously computed hash digests. That\nincreases cost of reverse-engineering passwords as each of them has to\nbe brute-forced individually."),(0,i.kt)("h2",{id:"sandbox"},"Sandbox"),(0,i.kt)(w,{mdxType:"HashCollisions"}))}C.isMDXComponent=!0},80950:function(){},46601:function(){},89214:function(){},8623:function(){},7748:function(){},85568:function(){},56619:function(){},77108:function(){},52361:function(){},94616:function(){}}]);